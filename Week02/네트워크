# 네트워크

## 1. 네트워크의 기초

네트워크 : 노드, 링크가 서로 연결, 리소스 공유하는 집합

- 노드 : 네트워크 장치 - 서버, 라우터, 스위치..
- 링크 : 유선, 무선

### 처리량과 지연시간

좋은 네트워크란?

: 많은 처리량 처리, 지연시간 짧음, 장애빈도 적음, 좋은 보안

- 처리량
    - 링크 내에서 성공적으로 전달된 데이터의 양
    - 얼마만큼의 트래픽 처리했는지 나타냄 → 많이 처리할수록 좋음
    - 트래픽 : 특정 시점 링크 내에서 흐르는 데이터의 양
- 지연시간
    - 요청이 처리되는 시간
    - = 메세지가 두 장치 사이를 왕복하는데 걸리는 시간

### 네트워크 토폴로지와 병목 현상

### 네트워크 토폴로지란?

: 노드와 링크가 어떻게 배치되어 있는지, 연결형태

- 트리 토폴로지
    - 계층형 토폴로지, 트리형태로 배치한 네트워크
    - 장 : 노드 추가, 삭제 쉬움
    - 단 : 특정노드 트래픽 집중 → 하위 영향
- 버스 토폴로지
    - 중앙통신 회선 하나에 여러 노드 연결
    - 장 : 설치 비용 적음, 신뢰성 높음, 노드 추가,삭제 쉬움
    - 단 : 스푸핑 가능
    
    <aside>
    💡 스푸핑이란?
    스위칭 기능을 마비, 속여서 특정 노드에 해당 패킷이 오도록 처리하는 것 
    스위칭 : LAN상에서 송신부의 패킷을 송신과 관련없는 다른 호스트에 가지 않도록 하는 것
    
    </aside>
    
- 스타 토폴로지
    - 중앙에 있는 노드에 모두 연결된 네트워크
    - 장 : 노드 추가, 에러 탐지 쉬움, 패킷 충돌 발생 적음. 다른 노드 영향 적음
    - 단 : 중앙노드 장애 → 전체 네트워크 사용 X, 설치 비용 고가

등..

병목현상이란?

: 전체 시스템의 성능이나 용량이 하나의 구성요소로 인해 제한 받는 현상

- 몸통보다 목 지름이 좁아 물이 천천히 쏟아지는 병에 비유
- 트래픽 많이 생기고 트랙픽 잘 관리하지 못하면 발생
- 토폴로지가 중요한 이유

### 네트워크 성능 분석 명령어

- ping
    - 네트워크 상태 확인하려는 대상 노드 ← 일정 크기 패킷 전송
    - 패킷 수신 상태, 도달시간, 연결상태 확인 가능
    - ICMP 프로토콜로 동장
- netstat
    - 접속되어 있는 서비스들의 네트워크 상태 표시
    - 서비스의 포트가 열려있는지 확인
- nslookup
    - 특정 도메인에 매핑된 IP 확인용
- tracert
    - 목적지 노드까지 네트워크 경로 확인할 때 사용
    - 어느 구간에서 응답시간이 느려지는지 확인

## 2. TCP/IP 4계층 모델

### 4계층 모델

1. 애플리케이션 계층
    - 응용프로그램 사용되는 프로토콜 계층
    - FTP, HTTP, SSH, SMTP, DNS
    - 실질적 서비스 제공 층
2. 전송 계층
    - 송신자, 수신자 연결하는 통신서비스 제공
    - 애플리케이션, 인터넷 계층 사이 데이터 전달될 때 중계 역할
    - TCP : 순서 보장, 수신여부 확인, 연결지향 프로그램 → 신뢰성 구축
    - UDP : 순서보장 x, 수신 여부 확인 x, 단순 데이터 줌
3. 인터넷 계층
    - 네트워크 패킷을 IP주소로 지정된 목적지로 전송하기 위해 사용
    - IP, ARP, ICMP
    - 비연결형적 특징 : 상대가 제대로 받았는지 보장 X
4. 링크 계층
    - 전선, 광섬유, 무선 등 실질적 데이터 전달
    - 장치간에 신호를 주고받는 규칙 정함

**유선 LAN**

- 전이중화 통신
    - 양쪽 장치가 동시에 송수신 가능
    - 같은 시간에 데이터 주고받을 수 있음
- CSAM / CD
    - 반이중화 통신 → 데이터 보낸 후 충돌 발생시 일정 시간 후 재전송

**유선 LAN 케이블**

- 트위스트 페어 케이블
- 광섬유 케이블

**무선 LAN**

- 반이중화 통신
    - 양쪽 장치 통신 가능 but 동시에 통신 불가능
    - 한번에 한 방향만 통신 (충돌방지)
- CSMA / CA
    - 반이중화 통신
    - 데이터 보내기 전 캐리어 감지 → 사전 가능한 충돌 방지

**무선 LAN 주파수**

- WIFI : AP(공유기)→ 유선 LAN 신호를 무선 LAN 신호로 바꿔줌
- BSS : 기본 서비스 집합, 동일 BSS내 있는 AP들과 서로 통신 가능
- ESS : 장거리 무선통신, 중단없이 네트워크 계속 연결

### 계층 간 데이터 송수신 과정

애플리케이션 계층 →(요청값 캡슐화)→ 전송계층 → 링크계층 (서버통신) → (비캡슐화)애플리케이션 계층

- 캡슐화 과정
    - 상위 계층의 헤더, 데이터 → 하위 계층의 데이터에 포함
    - 애플리케이션 → 전송계층 : TCP헤더(L4), 세그먼트, 데이터그램화
    - 전송계층 → 인터넷 계층 : IP헤더(L3), 패킷화
    - 인터넷 계층 → 링크 계층 : 프레임화
- 비캡슐화 과정
    - 하위→ 상위 : 계층의 헤더부분 제거 과정
    - 애플리케이션 → 사용자 : PDU인 메세지로 전달

### PDU

: 네트워크의 계층에서 계층으로 데이터가 전달될 때, 한 덩이의 단위

- 계층마다 부르는 명칭이 다름
    - 애플리케이션 계층 : 메세지
    - 전송 계층 : 세그먼트 (TCP), 데이터그램(UDP)
    - 인터넷 계층 : 패킷
    - 링크 계층 : 프레임(데이터 링크), 비트(물리)

## 2.3 네트워크 기기

- 애플리케이션 계층 : L7 스위치
- 인터넷 계층 : 라우터, L3 스위치
- 데이터링크 계층 : L2 스위치, 브리지
- 물리계층 : NIC, 리피터, AP

`스위치` : 여러 장비 연결, 데이터 통신 중재, 목적지가 연결된 포트로만 데이터 전송

### 애플리케이션 계층 (L7)

1. L7 스위치란?
    
    : 서버의 부하 분산(로드밸런서)
    
    - 클라이언트로부터 오는 요청 → 뒤의 여러 서버로 나누는 역할
    - 트래픽 증가 목표
    - URL, 서버, 캐시, 쿠키 기반 트래픽 분산
2. L4 스위치 vs L7 스위치
    - L4 : 전송 계층 처리하는 기기
        - 스트리밍 관련 사용 x
        - 메세지 기반 인식 x
        - IP, 포트 기반 트래픽 분산
    - 클라우드 서비스에서 이용
        - L7 : ALB 컴포넌트
        - L4 : NLB 컴포넌트
3. 로드밸런서를 이용한 서버 이중화
    - 서버 이중화
        - 서비스 안정적 운용 위해 2대 이상 필수
        - 2대 이상 서버 기반 가상 IP 제공, 안정적 서비스 제공

### 인터넷 계층

라우터, L3 스위치

1. 라우터 
    
    : 여러 네트워크 열결, 분할, 구분
    
    - 다른 네트워크 존재 장치끼리 서로 데이터 주고받을 떼 → 패킷 소모 최소화, 경로 최적화
2. L3 스위치
    - L2 스위치 기능 + 라우팅 기능
    - 하드웨어 기반의 라우팅 담당 (L3)
    - 소프트웨어 기반의 라우팅 담당 (L2)

### 데이터 링크 계층

L2스위치, 브리지

1. L2 스위치
    - MAC 주소를 MAC 주소 테이블 통해 관리
    - 연결된 장치로부터 패킷 왔을 때 패킷 전송 담당
    - IP 읽지 못함, MAC 주소 읽어 스위칭
2. 브리지
    - 두개의 근거리 통신망 상호 접속할 수 있게 해주는 장치
    - 포트 사리 다리역함
    - MAC 주소 관리

### 물리 계층

NIC, 리피터, AP

1. NIC
    - LAN 카드
    - 2대 이상 컴퓨터 네트워크 구성
    - 네트워크, 빠른속도 데이터 송수신 가능하게 함
2. 리피터
    - 약해진 신호 정도 증폭 → 자른쪽 전달
    - 패킷 멀리 갈 수 있음
3. AP
    - 패킷 복사 기기

## 4. IP 주소

컴퓨터간 통신 : IP주소에서 ARP 통해 MAC 주소 찾음 → MAC 주소 기반 통신

### ARP

: IP 주소로부터 MAC 주소 구하는 IP ↔ MAC 주소 사이 다리역할

- 가상주소 (IP)의 실제주소(MAC) 변환 : ARP
- MAC → IP : RARP

### 홉바이홉 통신

IP 주소 통해 통신

- 서브네트워크 안 라우터의 라우팅 테이블 → IP기반 패킷 전달
- 라우팅 수행, 최종 목적지까지 패킷 전달
- 라우팅 테이블
    - 송신지에서 수신지까지 도달하기 위해 사용
    - 라우터 속 목적지 정보들, 그 목적지로 가기 위한 방법이 들어 있는 리스트
- 게이트웨이
    - 서로 다른 통신망, 프로토콜을 사용하는 네트워크 간의 통신을 가능하게 하는 관문 역할을 하는 컴퓨터나 소프트웨어
    - 사용자는 인터넷에 접속하기 위해 게이트웨이 거침
    - 서로 다른 네트워크상의 통신 프로토콜을 변환

### IP 주소 체계

IPv4 : 32비트를 8비트 단위로 점을 찍어 표기

IPv6: 64비트를 16비트 단위로 점을 찍어 표기

- 클래스 기반 할당 방식
    - 앞 : 네트워크 주소
    - 뒤 : 컴퓨터에 부여하는 주소 = 호스트 주소
    
    ![Untitled](https://prod-files-secure.s3.us-west-2.amazonaws.com/c13c2a97-0cdc-4cd6-85f1-e680ee130618/f6be97d5-ec96-4cee-957d-33bb9f08f335/Untitled.png)
    
    - 구분 주소, 호스트 주소, 브로드캐스트 주소
    - 버리는 주소가 많음

- DHCP
    - IP 주소 및 기타 통신 매개변수를 자동 으로 할당하기 위한 네트워크 관리 프로토콜
    - 네트워크 장치의 IP 주소를 수동으로 설정할 필요 없이 인터넷에 접속할 때마다 자동으로 IP 주소를 할당
    
- NAT
    - 패킷이 라우팅 장치를 통해 전송되는 동안 패킷의 IP 주소 정보를 수정하여 IP 주소를 다른 주소로 매핑
    - IPv4 주소 체계만 으로는 많은 주소들을 모두 감당하지 못함

## 5. HTTP

### HTTP 1.0

기본적으로 한 연결당 하나의 요청을 처리하도록 설계

- RTT 증가
- 해결) 이미지 스플리팅, 코드 압축, 이미지 Base64 인코딩 사용
    - 이미지 스플리팅 : 많은 이미지가 합쳐 있는 하나 의 이미지를 다운, 이미지 표기
    - 코드 압축 : 코드를 압축해서 개행 문자, 빈칸을 없애서 코드의 크기를 최소화

### HTTP 1.1

- 매번 TCP 연결 X
- 한 번 TCP 초기화를 한 이후에 keep-alive라는 옵션으로 여러 개의 파일을 송수신
- HOL Blocking : 네트워크에서 같은 큐에 있는 패킷이 그 첫 번 째 패킷에 의해 지연될 때 발생하는 성능 저하 현상
- 무거운 헤더 구조 : 메타데이터가 들어 있고 압축이 되지 않아 무거움

### HTTP/2

- 지연 시간을 줄이고 응답 시간을 더 빠르게
- 멀티플렉싱, 헤더 압축, 서버 푸시, 요청의 우선순위 처리를 지원
    - 멀티 플렉싱 : 여러 개의 스트림을 사용하여 송수신
    - 해더압축 : 허프만 코딩 압축 알고리즘을 사용하 는 HPACK 압축

### HTTPS

애플리케이션 계층과 전송 계층 사이에 신뢰 계층인 SSL/TLS 계층을 넣은 신뢰할 수 있는 HTTP 요청

- SSL/TLS
    - 전송 계층에서 보안을 제공하는 프로토콜
    - 제3자가 메시지를 도청하거나 변조하지 못하게
- 인증 메커니즘
    - CA에서 발급한 인증서를 기반
    - 공개키’를 클라이언트에 제공, 신뢰할 수 있는 서버 보장
- 페이지 속도 개선
- 사이트맵 관리

### HTTP

QUIC이라는 계층 위에서 돌아가며, TCP 기반이 아닌 UDP 기반으로 돌아감

- 초기 연결 설정 시 지연 시간 감소
    - 3-웨이 핸드셰이크 과정을 거치지 않아도 됨
    - 전송한 패킷이 손실되었다면 수신 측에서 에러를 검출하고 수정하는 방식
    - 열악한 네트워크 환경에서도 낮은 패킷 손실률
